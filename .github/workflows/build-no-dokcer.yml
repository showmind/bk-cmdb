
on:
  push:
    tags:
      - 'v*.*.*'  # 只在版本标签推送时触发
      - 'test-*'
      - 'release-*'
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        arch: [arm64,x86_64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js 14
        uses: actions/setup-node@v4
        with:
          node-version: '14'

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'  # 你可以根据需要修改版本号


      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'  # 使用最新 Python 3 版本

      # 步骤 2: 创建 python 命令别名 (兼容系统环境)
      - name: Create python alias
        run: |
          # 检查现有 python 命令是否存在
          if ! command -v python &> /dev/null; then
            # 如果没有 python 命令，创建指向 python3 的软链接
            sudo ln -s $(which python3) /usr/bin/python
          fi
          # 验证别名是否设置成功
          python --version


      - name: Set up Python 2.7
        run: |
          sudo apt-get update
          sudo apt-get install -y python2.7
          npm config set python /usr/bin/python2.7
      
      - name: Run your custom bash commands
        run: |
          echo "Running custom commands..."
          pwd
          ls -la
          # 替换为你自己的命令
          cd src && make && make package
          
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - run: cd src/bin/pub && mv cmdb.tar.gz cmdb-${{ matrix.arch }}.tar.gz 
      
      - run: cd src/bin/pub/cmdb &&  DOCKER_NAME_SPACE=${{ vars.DOCKERHUB_USERNAME }} ./image.sh

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: packages-${{ matrix.arch }}
          path: src/bin/pub/cmdb-${{ matrix.arch }}.tar.gz
        
  
  release:
    runs-on: ubuntu-22.04

    needs: [build]
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        name: packages-arm64

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        name: packages-x86_64
    
    - name: Create Release and Upload Release Asset
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        tag_name: ${{ github.ref }} 
        name: Release ${{ github.ref }} 
        body: New Release.
        draft: false
        prerelease: false
        files: |
          ${{ github.workspace }}/cmdb-*.tar.gz